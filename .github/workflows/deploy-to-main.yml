name: Deploy Angular App to S3

on:
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Ejecutar pruebas unitarias con coverage
        run: ng test --code-coverage --watch=false --code-coverage

      - name: Validar coverage por componente (mÃ­nimo 71%)
        run: |
          # Buscar el archivo coverage-summary.json en cualquier subdirectorio
          FILE=$(find ./coverage -type f -name coverage-summary.json | head -n 1)
          echo "Usando archivo de coverage: $FILE"

          # Se recorre el archivo JSON y se filtran las entradas correspondientes a componentes Angular
          node -e "
          const coverage = require('$FILE');
          const required = 71;
          let failed = false;
          // Se asume que los componentes tienen el sufijo '.component.ts'
          Object.keys(coverage)
            .filter(file => file.endsWith('.component.ts'))
            .forEach(file => {
              const data = coverage[file];
              console.log(\`Coverage para \${file}:\`);
              console.log(\`  Statements: \${data.statements.pct}%\`);
              console.log(\`  Branches: \${data.branches.pct}%\`);
              console.log(\`  Functions: \${data.functions.pct}%\`);
              console.log(\`  Lines: \${data.lines.pct}%\`);
              if (
                data.statements.pct < required ||
                data.branches.pct < required ||
                data.functions.pct < required ||
                data.lines.pct < required
              ) {
                console.error(\`Coverage de \${file} es inferior al umbral requerido de \${required}%\`);
                failed = true;
              }
            });
          if (failed) process.exit(1);
          "

      - name: Build Angular app
        run: ng build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: List build output
        run: ls -la ./dist

      - name: Deploy to S3
        run: aws s3 sync ./dist/proyecto-final-web s3://fe-web-v1 --delete

  check:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Ensure deploy job succeeded
        run: exit 1
        if: ${{ needs.deploy.result != 'success' }}
